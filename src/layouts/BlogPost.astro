---
import type { CollectionEntry } from 'astro:content';

type Props = CollectionEntry<'blog'>['data'];

const { title, description,heroImage } = Astro.props;
---

<html lang="en">
	<head>
		<style>
			main {
				width: calc(100% - 2em);
				max-width: 100%;
				margin: 0;
			}
			.hero-image {
				width: 100%;
			}
			.hero-image img {
				display: block;
				margin: 0 auto;
				border-radius: 12px;
				box-shadow: var(--box-shadow);
			}
			.prose {
				width: 720px;
				max-width: calc(100% - 2em);
				margin: auto;
				padding: 1em;
				color: rgb(var(--gray-dark));
			}
			.title {
				margin-bottom: 1em;
				padding: 1em 0;
				text-align: center;
				line-height: 1;
			}
			.title h1 {
				margin: 0 0 0.5em 0;
			}
			.date {
				margin-bottom: 0.5em;
				color: rgb(var(--gray));
			}
			.last-updated-on {
				font-style: italic;
			}
		</style>
	</head>

	<body>
		<main>
			<article>
				<div class="hero-image">
					{heroImage && <img width={1020} height={510} src={heroImage} alt="" />}
				</div>
				<div class="prose">
					<div class="title">
						<h1>{title}</h1>
						<hr />
					</div>
					<slot />
				</div>
				<p>{description}</p>
				<div id="paypal-button-container"></div>
			</article>
		</main>
	</body>
	<script is:inline src="https://www.paypal.com/sdk/js?client-id=AVMpLFCadvhWxOhWaTwU-iVjWcsPTHjEeCgEJCHdWJ-FA1FRUHWCDZf0Kbq_ZyCdzlVke7__Y7TbXkJm"></script>
	<script is:inline>
		// Verificar si el c贸digo ya se ejecut贸
		const scriptAlreadyExecuted = history.state && history.state.paymentScriptExecuted;
	  
		if (!scriptAlreadyExecuted) {
		  document.addEventListener('DOMContentLoaded', function() {
			let newPrice;
			let priceArr = document.querySelectorAll('p');
	  
			priceArr.forEach(price => {
			  newPrice = price.innerHTML.slice(1);
			});
	  
			paypal.Buttons({
			  createOrder: function(data, actions) {
				return actions.order.create({
				  purchase_units: [{
					amount: {
					  currency_code: 'USD',
					  value: newPrice
					}
				  }]
				});
			  },
			  onApprove: function(data, actions) {
				return actions.order.capture().then(
				  (details) => {
					alert("OK");
					console.log(details);
				  }
				);
			  },
			  onError: function(err) {
				console.log("Payment error " + err);
				alert("Payment denied");
			  }
			}).render("#paypal-button-container");
	  
			// Establecer el estado de historial para indicar que el c贸digo ya se ejecut贸
			history.replaceState({ paymentScriptExecuted: true }, document.title);
		  });
		}
	  </script>
</html>
